{"ast":null,"code":"import React from \"react\";\nimport { createStore } from \"redux\";\n\nclass ReduxStore extends React.Component {\n  render() {\n    // step2 create reducer (state, action)\n    const reducer = (state, action) => {\n      if (action.type === \"REACT\") {\n        return action.value;\n      }\n\n      return state;\n    }; // step1 create the store (reducer, state)\n\n\n    const store = createStore(reducer, \"JS\"); // step3 create subscription\n\n    const a = store.subscribe(() => {\n      console.log(\"-->hello\", store.getState()); //when state is changing calling this.\n    }); // step4 dispatch()(if type is \"REACT\" )(sending the cammand)\n\n    store.dispatch({\n      type: \"REACT\",\n      value: \" lets learn react\"\n    });\n    return null;\n  }\n\n}\n\nexport { ReduxStore };","map":{"version":3,"sources":["/Users/shreya/work/personal/blog-demo/src/redux-store.js"],"names":["React","createStore","ReduxStore","Component","render","reducer","state","action","type","value","store","a","subscribe","console","log","getState","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AACvCC,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAIA,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,eAAOD,MAAM,CAACE,KAAd;AACD;;AACD,aAAOH,KAAP;AACD,KALD,CAFO,CASP;;;AACA,UAAMI,KAAK,GAAGT,WAAW,CAACI,OAAD,EAAU,IAAV,CAAzB,CAVO,CAYP;;AACA,UAAMM,CAAC,GAAGD,KAAK,CAACE,SAAN,CAAgB,MAAM;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,KAAK,CAACK,QAAN,EAAxB,EAD8B,CACa;AAC5C,KAFS,CAAV,CAbO,CAiBP;;AACAL,IAAAA,KAAK,CAACM,QAAN,CAAe;AAAER,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAf;AAEA,WAAO,IAAP;AACD;;AAtBsC;;AAwBzC,SAASP,UAAT","sourcesContent":["import React from \"react\";\nimport { createStore } from \"redux\";\n\nclass ReduxStore extends React.Component {\n  render() {\n    // step2 create reducer (state, action)\n    const reducer = (state, action) => {\n      if (action.type === \"REACT\") {\n        return action.value;\n      }\n      return state;\n    };\n\n    // step1 create the store (reducer, state)\n    const store = createStore(reducer, \"JS\");\n\n    // step3 create subscription\n    const a = store.subscribe(() => {\n      console.log(\"-->hello\", store.getState()); //when state is changing calling this.\n    });\n\n    // step4 dispatch()(if type is \"REACT\" )(sending the cammand)\n    store.dispatch({ type: \"REACT\", value: \" lets learn react\" });\n\n    return null\n  }\n}\nexport { ReduxStore };\n"]},"metadata":{},"sourceType":"module"}